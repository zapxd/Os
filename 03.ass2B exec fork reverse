#include <stdio.h>

#include <stdlib.h>

#include <unistd.h>

#include <sys/wait.h>

#include <string.h>

#define MAX 20

int a[1000];

void sortArray(int *arr, int n) {

 for (int i = 0; i < n - 1; i++) {

 for (int j = i + 1; j < n; j++) {

 if (arr[i] > arr[j]) {

 int temp = arr[i];

 arr[i] = arr[j];

 arr[j] = temp;

 }

 }

 }

}

int main() {

 int i, n, ele;

 char *str1[MAX];

 char str[5];

 

 // Accept array size

 printf("Enter the number of elements: ");

 scanf("%d", &n);

 // Accept array elements

 printf("Enter the elements: ");

 for (int i = 0; i < n; i++) {

 scanf("%d", &a[i]);

 }

 pid_t pid = fork();

 if (pid < 0) {

 printf("Error while creating new process....!!!!");

 }else if(pid >0){

 // Sort the array

 sortArray(a, n);

 printf("After Sorting");

 for(i = 0; i< n; i++){

 

 printf("%d ", a[i]);

 }

 

 printf("\n");

for(i = 0; i < MAX; i++){

str1[i] = NULL;

}

for(i =0; i < n; i++){

sprintf(str, "%d", a[i]);

str1[i] = strdup(str);

}

execve("./child", str1, NULL);

printf("EXECVE not called... !!");

 } 

 return 0;

}





Reverse :

#include <stdio.h>

#include <stdlib.h>

#include <unistd.h>

#include <sys/wait.h>

#include <string.h>

#define MAX 20

int a[1000];

int main(int argc, char *argv[]) {

 int i = 0;

 // Display the array in reverse order

 printf("Array in reverse order: ");

 for (int i = 0; i< argc; i++) {

 a[i] = atoi(argv[i]);

 }

 

 printf("Reversed Array ... ");

 for(i = argc -1; i >= 0; i--){

 printf("%d ", a[i]);

 }

 printf("\n");

 return 0;

}
